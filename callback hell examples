function getFrogsWithVitalSigns(params, callback) {
    let frogIds, frogsListWithVitalSignsData
    api.fetchFrogs(params, (frogs, error) => {
      if (error) {
        console.error(error)
        return
      } else {
        frogIds = frogs.map(({ id }) => id)
        // The list of frogs did not include their health information, so lets fetch that now
        api.fetchFrogsVitalSigns(
          frogIds,
          (frogsListWithEncryptedVitalSigns, err) => {
            if (err) {
              // do something with error logic
            } else {
              // The list of frogs health info is encrypted. Our friend texted us the secret key to use in this step. This is used to decrypt the list of frogs encrypted health information
              api.decryptFrogsListVitalSigns(
                frogsListWithEncryptedVitalSigns,
                'pepsi',
                (data, errorr) => {
                  if (errorrr) {
                    throw new Error('An error occurred in the final api call')
                  } else {
                    if (Array.isArray(data)) {
                      frogsListWithVitalSignsData = data
                    } else {
                      frogsListWithVitalSignsData = data.map(
                        ({ vital_signs }) => vital_signs,
                      )
                      console.log(frogsListWithVitalSignsData)
                    }
                  }
                },
              )
            }
          },
        )
      }
    })
  }
  
  const frogsWithVitalSigns = getFrogsWithVitalSigns({
    offset: 50,
  })
    .then((result) => {
      console.log(result)
    })
    .catch((error) => {
      console.error(error)
    })


